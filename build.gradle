plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.8.1"
}

group 'qa.guru'
version '1.0'

repositories {
    mavenCentral()
}

def allureVersion = "2.13.9",
    selenideVersion = "5.23.0",
    junitVersion = "5.7.2"

allure {
    version = '2.14.0'
    aspectjVersion = '1.9.4' // добавить при Error: unable to add stackmap attributes. null
    aspectjweaver = true
    configuration = "testImplementation" // если при запуске тестов через терминал,
    // ошибка Configuration with name 'testCompile' not found
    autoconfigure = true
    useJUnit5 {
        version = '2.14.0'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceCompatibility = 11
targetCompatibility = 11

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "com.github.javafaker:javafaker:1.0.2",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:1.7.29",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
//            events "started", "failed"
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke(type: Test) {
    useJUnitPlatform {
        includeTags 'smoke'
    }
}
